name: Build and Deploy Workflow
on:
  workflow_dispatch:
  push:
    branches: [dev, qa, stage, prod]
jobs:
  Build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment:
      name: ${{ github.ref_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get repository name
        id: repo-name
        uses: MariachiBear/get-repo-name-action@v1.1.0
        with:
          with-owner: 'false'
          string-case: 'lowercase'

      # - name: Authenticate with AWS ECR
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     audience: sts.amazonaws.com
      #     aws-region: us-east-2
      #     role-to-assume: arn:aws:iam::488092325391:role/oidc-role-for-vitafy-pipeline

      - name: Login to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-southeast-1
        run: |
          aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 654654282708.dkr.ecr.ap-southeast-1.amazonaws.com
      - name: Build Docker Image
        run: |
          docker build -t subrat-be-${{ github.ref_name }} .
          docker tag subrat-be-${{ github.ref_name }}:latest 654654282708.dkr.ecr.ap-southeast-1.amazonaws.com/subrat-be-${{ github.ref_name }}:latest
          docker push 654654282708.dkr.ecr.ap-southeast-1.amazonaws.com/subrat-be-${{ github.ref_name }}:latest
  # Deploy:
  #   needs: Build
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: ${{ github.ref_name }}
  #   steps:
  #     - name: AWS SSM Send-Command
  #       uses: peterkimzz/aws-ssm-send-command@master
  #       id: ssm
  #       with:
  #         aws-region: ${{ secrets.AWS_REGION }}
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         instance-ids: ${{ secrets.INSTANCE_ID }}
  #         working-directory: /home/ubuntu
  #         command: bash ui-${{ github.ref_name }}.sh
  #         comment: Deployed!
  #     - name: Get the outputs
  #       run: echo "The Command id is ${{ steps.ssm.outputs.command-id }}"
